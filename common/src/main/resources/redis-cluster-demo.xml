<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
	  http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	  http://www.springframework.org/schema/tx
	  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	  http://www.springframework.org/schema/aop
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	  http://www.springframework.org/schema/context
	  http://www.springframework.org/schema/context/spring-context-3.0.xsd
	  http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util-3.2.xsd">



    <!-- jedis 配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
        <!--最大连接数-->
        <property name="maxTotal" value="${redis_maxTotal}"/>
        <!--最大空连接数-->
        <property name="maxIdle" value="${redis_maxIdle}" />
        <!--最小空连接数-->
        <property name="minIdle" value="${redis_minIdle}" />
        <!--获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1-->
        <property name="maxWaitMillis" value="${redis_maxWait}" />
        <!-- 表示idle object evitor每次扫描的最多的对象数 -->
        <property name="numTestsPerEvictionRun" value="${redis_numTestsPerEvictionRun}" />
        <!-- 表示idle object evitor两次扫描之间要sleep的毫秒数  -->
        <property name="timeBetweenEvictionRunsMillis" value="${redis_timeBetweenEvictionRunsMillis}" />
        <!-- 表示一个对象至少停留在idle状态的最短时间，然后才能被idle object evitor扫描并驱逐；这一项只有在timeBetweenEvictionRunsMillis大于0时才有意义 -->
        <property name="minEvictableIdleTimeMillis" value="${redis_minEvictableIdleTimeMillis}"/>
        <!-- 在minEvictableIdleTimeMillis基础上，加入了至少minIdle个对象已经在pool里面了。
        如果为-1，evicted不会根据idle time驱逐任何对象。
        如果minEvictableIdleTimeMillis>0，则此项设置无意义，且只有在timeBetweenEvictionRunsMillis大于0时才有意义 -->
        <property name="softMinEvictableIdleTimeMillis" value="${redis_softMinEvictableIdleTimeMillis}"/>

        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="true" />
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true" />
        <!-- 在归还给pool时，是否提前进行validate操作 -->
        <property name="testOnReturn" value="true" />
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false" />
    </bean>



    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        <constructor-arg name="jedisClusterNode">
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg index="0" value="${redis_cluster_1_host}"></constructor-arg>
                    <constructor-arg index="1" value="${redis_cluster_1_port}"></constructor-arg>
                </bean>
            </set>
        </constructor-arg>
        <!--返回值的超时时间-->
        <constructor-arg name="soTimeout" value="${redis_sockettimeout}"></constructor-arg>
        <constructor-arg name="connectionTimeout" value="${redis_timeout}"></constructor-arg>
        <!--出现异常最大重试次数-->
        <constructor-arg name="maxAttempts" value="${redis_maxAttempts}"></constructor-arg>
        <!--注意:测试环境中不需要配置密码  正式环境需要配置密码-->
        <!-- <constructor-arg name="password" value="${redis_password}"></constructor-arg>-->
        <constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>
    </bean>


    <bean id="jedisClusterUtil" class="com.dj.common.utils.redis.JedisClusterUtil">
        <property name="jedisCluster" ref="jedisCluster"/>
    </bean>

</beans>